
//There is a problem with global-scoped functions, a function in
//another file with the same name will override the previous definition
//Modules can be used to overcome this problem

//Variables created in a module are scoped to that file and 
//cannot be accessed except by explicitly declaring the module
//and making it public

//To load a module i.e use functions/implementations in 
//another file here, we use the `require` keyword
const log =  require('./logger');

//It's better to store the function in a constant, so the value can't be changed
//Accidentally resetting the variable can easily be found

log('Big crash just happened');

console.log(log);


